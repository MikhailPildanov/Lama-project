Index: main/cafe/templates/store/menu_detail.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{% extends \"store/base.html\" %}\r\n{% load static %}\r\n{% block content %}\r\n\r\n    <div class=\"row\">\r\n        {% for food in foods %}\r\n        <div class=\"col-lg-4\">\r\n          <img class=\"thumbnail\" src=\"{{food.imageURL}}\">\r\n          <div class=\"box-element product\">\r\n              <h6><strong>{{food.name}}</strong></h6>\r\n              <hr>\r\n              <a href=\"#\" class=\"btn btn-warning\">Перейти</a>\r\n          </div>\r\n        </div>\r\n        {% endfor %}\r\n    </div>\r\n    \r\n{% endblock content %}\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/main/cafe/templates/store/menu_detail.html b/main/cafe/templates/store/menu_detail.html
--- a/main/cafe/templates/store/menu_detail.html	(revision a5d354610e3db88e938230e275db7a7ba226af0d)
+++ b/main/cafe/templates/store/menu_detail.html	(date 1708955083392)
@@ -2,18 +2,38 @@
 {% load static %}
 {% block content %}
 
-    <div class="row">
-        {% for food in foods %}
-        <div class="col-lg-4">
-          <img class="thumbnail" src="{{food.imageURL}}">
-          <div class="box-element product">
-              <h6><strong>{{food.name}}</strong></h6>
-              <hr>
-              <a href="#" class="btn btn-warning">Перейти</a>
-          </div>
-        </div>
-        {% endfor %}
-    </div>
+    <aside>
+        <h3>Навигация</h3>
+        <ul>
+            {% for food in foods %}
+                <a href="#"><li>{{food.name}}</li> </a>
+            {% endfor %}
+        </ul>
+    </aside>
+    <main>
+        <div class="row">
+            <div class="descript">
+                <img class="image-menu" src="{{menu.imageURL}}">
+                <h6>{{menu.description}}</h6>
+                <h6>Описание</h6>
+            </div>
+            {% for food in foods %}
+            <div class="col-lg-4">
+              <img class="thumbnail" src="{{food.imageURL}}">
+              <div class="box-element product">
+                  <h6><strong>{{food.name}}</strong></h6>
+                  <h6>{{food.description}}</h6>
+                  <h5>{{food.price}}</h5>
+                  <hr>
+                  <a href="#" class="btn btn-warning">"Заказать"</a>
+              </div>
+            </div>
+            {% endfor %}
+        </div>
+    </main>
+
+
+
     
 {% endblock content %}
 
Index: main/static/css/main.css
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>body{\r\n\tbackground-color: hsl(0, 0%, 98%);\r\n}\r\n\r\nh1,h2,h3,h4,h5,h6{\r\n\tcolor:hsl(0, 0%, 30%);\r\n}\r\n\r\n.box-element{\r\n\tbox-shadow:hsl(0, 0%, 80%) 0 0 16px;\r\n\tbackground-color: #fff;\r\n\tborder-radius: 4px;\r\n\tpadding: 10px;\r\n}\r\n\r\n.thumbnail{\r\n\twidth: 100%;\r\n\theight: 200px;\r\n\t-webkit-box-shadow: -1px -3px 5px -2px rgba(214,214,214,1);\r\n    -moz-box-shadow: -1px -3px 5px -2px rgba(214,214,214,1);\r\n    box-shadow: -1px -3px 5px -2px rgba(214,214,214,1);\r\n}\r\n\r\n.product{\r\n\tborder-radius: 0 0 4px 4px;\r\n}\r\n\r\n.bg-dark{\r\n\tbackground-color: #4f868c!important;\r\n}\r\n\r\n#cart-icon{\r\n\twidth:25px;\r\n\tdisplay: inline-block;\r\n\tmargin-left: 15px;\r\n}\r\n\r\n#cart-total{\r\n\tdisplay: block;\r\n\ttext-align: center;\r\n\tcolor:#fff;\r\n\tbackground-color: red;\r\n\twidth: 20px;\r\n\theight: 25px;\r\n\tborder-radius: 50%;\r\n\tfont-size: 14px;\r\n}\r\n\r\n.col-lg-4, .col-lg-6, .col-lg-8, .col-lg-12{\r\n\tmargin-top: 10px;\r\n}\r\n\r\n.btn{\r\n\tborder-radius: 0;\r\n}\r\n\r\n.row-image{\r\n\twidth: 100px;\r\n}\r\n\r\n.form-field{\r\n\twidth:250px;\r\n\tdisplay: inline-block;\r\n\tpadding: 5px;\r\n}\r\n\r\n.cart-row{\r\n\tdisplay: flex;\r\n    align-items: flex-stretch;\r\n    padding-bottom: 10px;\r\n    margin-bottom: 10px;\r\n    border-bottom: 1px solid #ececec;\r\n\r\n}\r\n\r\n.quantity{\r\n\tdisplay: inline-block;\r\n\tfont-weight: 700;\r\n\tpadding-right:10px;\r\n\t\r\n\r\n}\r\n\r\n.chg-quantity{\r\n\twidth: 12px;\r\n\tcursor: pointer;\r\n\tdisplay: block;\r\n\tmargin-top: 5px;\r\n\ttransition:.1s;\r\n}\r\n\r\n.chg-quantity:hover{\r\n\topacity: .6;\r\n}\r\n\r\n\r\n.hidden{\r\n\tdisplay: none!important;\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/main/static/css/main.css b/main/static/css/main.css
--- a/main/static/css/main.css	(revision a5d354610e3db88e938230e275db7a7ba226af0d)
+++ b/main/static/css/main.css	(date 1708955269933)
@@ -15,7 +15,7 @@
 
 .thumbnail{
 	width: 100%;
-	height: 200px;
+	height: 190px;
 	-webkit-box-shadow: -1px -3px 5px -2px rgba(214,214,214,1);
     -moz-box-shadow: -1px -3px 5px -2px rgba(214,214,214,1);
     box-shadow: -1px -3px 5px -2px rgba(214,214,214,1);
@@ -46,8 +46,22 @@
 	font-size: 14px;
 }
 
-.col-lg-4, .col-lg-6, .col-lg-8, .col-lg-12{
-	margin-top: 10px;
+.col-lg-4, .col-lg-8, .col-lg-12{
+	margin: 10px;
+	width: 250px;
+	height: 300px;
+}
+
+.col-lg-6{
+	margin: 10px;
+	width: 350px;
+	height: 290px;
+	margin-block: 20px;
+}
+
+.col-lg-7{
+	margin: 10px;
+	width: 350px;
 }
 
 .btn{
@@ -96,4 +110,26 @@
 
 .hidden{
 	display: none!important;
-}
\ No newline at end of file
+}
+
+.row{
+	text-align: center;
+}
+
+aside{
+	height: 100%;
+	width: 200px;
+	float: left;
+	margin-left: 10px;
+}
+
+ul{
+	list-style: none;
+}
+
+.image-menu{
+	height: 180px;
+	width: 300px;
+	float: left;
+	margin-block: 30px;
+}
Index: main/cafe/models.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from django.db import models\r\nfrom django.contrib.auth.models import AbstractBaseUser\r\n\r\nclass Customer(AbstractBaseUser):\r\n    name = models.CharField(max_length=200, null=True)\r\n    phone = models.CharField(max_length=12, null=True)\r\n    \r\n    USERNAME_FIELD = 'name'\r\n    REQUIRED_FIELDS = ['phone']\r\n    def __str__(self):\r\n        return self.name\r\n\r\nclass Menu(models.Model):\r\n    name = models.CharField(max_length=200, null=True)\r\n    description = models.TextField(null=True)\r\n    image = models.ImageField(null=True, blank=True)\r\n\r\n    def __str__(self):\r\n        return str(self.id)\r\n        \r\n    @property\r\n    def imageURL(self):\r\n        try:\r\n            url = self.image.url\r\n        except:\r\n            url = ''\r\n        return url\r\n\r\nclass Food(models.Model):\r\n    menu = models.ForeignKey(Menu, on_delete=models.SET_NULL, null=True, blank=True)\r\n    name = models.CharField(max_length=200, null=True)\r\n    price = models.FloatField()\r\n    description = models.TextField(null=True)\r\n    image = models.ImageField(null=True, blank=True)\r\n    status = models.BooleanField(default=True)\r\n\r\n    def __iter__(self):\r\n        return [self.menu,\r\n                self.name,\r\n                self.price,\r\n                self.description,\r\n                self.status]\r\n    \r\n    @property\r\n    def imageURL(self):\r\n        try:\r\n            url = self.image.url\r\n        except:\r\n            url = ''\r\n        return url\r\n\r\nclass Order(models.Model):\r\n    customer = models.ForeignKey(Customer, on_delete=models.SET_NULL, null=True, blank=True)\r\n    order_time = models.DateTimeField(auto_now_add=True)\r\n    status = models.IntegerField(null=True)\r\n\r\n    def __str__(self):\r\n        return str(self.id)\r\n\r\nclass ShippingAddress(models.Model):\r\n    customer = models.ForeignKey(Customer, on_delete=models.SET_NULL, null=True, blank=True)\r\n    order = models.ForeignKey(Order, on_delete=models.SET_NULL, null=True, blank=True)\r\n    street = models.CharField(max_length=200, null=True)\r\n    house = models.CharField(max_length=200, null=True)\r\n    flat = models.CharField(max_length=200, null=True)\r\n    level = models.CharField(max_length=200, null=True)\r\n\r\n    def __str__(self):\r\n        return self.street\r\n\r\nclass OrderItem(models.Model):\r\n    food = models.ForeignKey(Food, on_delete=models.SET_NULL, blank=True, null=True)\r\n    order = models.ForeignKey(Order, on_delete=models.SET_NULL, blank=True, null=True)\r\n    quantity = models.IntegerField(default = 0, null=True, blank=True)\r\n    \r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/main/cafe/models.py b/main/cafe/models.py
--- a/main/cafe/models.py	(revision a5d354610e3db88e938230e275db7a7ba226af0d)
+++ b/main/cafe/models.py	(date 1708951720424)
@@ -14,6 +14,7 @@
     name = models.CharField(max_length=200, null=True)
     description = models.TextField(null=True)
     image = models.ImageField(null=True, blank=True)
+    # category
 
     def __str__(self):
         return str(self.id)
@@ -28,6 +29,7 @@
 
 class Food(models.Model):
     menu = models.ForeignKey(Menu, on_delete=models.SET_NULL, null=True, blank=True)
+    # menu_name
     name = models.CharField(max_length=200, null=True)
     price = models.FloatField()
     description = models.TextField(null=True)
